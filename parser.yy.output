
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_decls procedure_list
2: program ->  procedure_decls procedure_list
3: procedure_list ->  procedure_name #0001 procedure_body #0002 procedure_list
4: #0001 ->  <empty>
5: #0002 ->  <empty>
6: procedure_list ->  <empty>
7: procedure_decls (NAME) ->  type_declaration NAME '(' argument_list ')' ';' procedure_decls
8: procedure_decls (NAME) ->  type_declaration NAME '(' ')' ';' procedure_decls
9: procedure_decls ->  <empty>
10: procedure_name (NAME) ->  NAME '(' argument_list ')'
11: procedure_name (NAME) ->  NAME '(' ')'
12: argument_list (',') ->  argument_list ',' argument
13: argument_list ->  argument
14: argument (NAME) ->  type_declaration NAME
15: procedure_body ('{') ->  '{' declaration_statement_list #0003 basic_block_list '}'
16: #0003 ->  <empty>
17: procedure_body ('{') ->  '{' basic_block_list '}'
18: declaration_statement_list ->  declaration_statement
19: declaration_statement_list ->  declaration_statement_list declaration_statement
20: declaration_statement (NAME) ->  type_declaration NAME ';'
21: type_declaration (INTEGER) ->  INTEGER
22: type_declaration (FLOAT) ->  FLOAT
23: type_declaration (DOUBLE) ->  DOUBLE
24: type_declaration (VOID) ->  VOID
25: basic_block_list ->  basic_block_list basic_block
26: basic_block_list ->  basic_block
27: basic_block (BASIC_BLOCK) ->  BASIC_BLOCK ':' executable_statement_list
28: executable_statement_list ->  assignment_statement_list
29: executable_statement_list (RETURN) ->  assignment_statement_list RETURN return_value ';'
30: return_value ->  comparision_expression
31: return_value ->  <empty>
32: assignment_statement_list ->  <empty>
33: assignment_statement_list ->  assignment_statement_list assignment_statement
34: assignment_statement (ASSIGN_OP) ->  variable ASSIGN_OP comparision_expression ';'
35: assignment_statement ->  if_block
36: assignment_statement ->  goto_statement
37: assignment_statement (';') ->  func_call ';'
38: if_block (IF) ->  IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';'
39: goto_statement (GOTO) ->  GOTO BASIC_BLOCK ';'
40: comparision_expression ->  arith_expression
41: comparision_expression (GT) ->  comparision_expression GT comparision_expression
42: comparision_expression (LT) ->  comparision_expression LT comparision_expression
43: comparision_expression (GE) ->  comparision_expression GE comparision_expression
44: comparision_expression (LE) ->  comparision_expression LE comparision_expression
45: comparision_expression (EQ) ->  comparision_expression EQ comparision_expression
46: comparision_expression (NE) ->  comparision_expression NE comparision_expression
47: arith_expression ('-') ->  '-' atomic_expr
48: arith_expression ('-') ->  '-' '(' comparision_expression ')'
49: arith_expression ('(') ->  '(' type_declaration ')' atomic_expr
50: arith_expression ('(') ->  '(' type_declaration ')' '(' comparision_expression ')'
51: arith_expression ('(') ->  '(' comparision_expression ')'
52: arith_expression ->  atomic_expr
53: arith_expression ('*') ->  arith_expression '*' arith_expression
54: arith_expression ('/') ->  arith_expression '/' arith_expression
55: arith_expression ('+') ->  arith_expression '+' arith_expression
56: arith_expression ('-') ->  arith_expression '-' arith_expression
57: atomic_expr ->  variable
58: atomic_expr ->  constant
59: atomic_expr ->  func_call
60: func_call (NAME) ->  NAME '(' pass_variable_list ')'
61: func_call (NAME) ->  NAME '(' ')'
62: pass_variable_list (',') ->  comparision_expression ',' pass_variable_list
63: pass_variable_list ->  comparision_expression
64: variable (NAME) ->  NAME
65: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
66: constant (FLOAT_NUMBER) ->  FLOAT_NUMBER
67: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BASIC_BLOCK
   259: FLOAT_NUMBER
   260: NAME
   261: RETURN
   262: INTEGER
   263: FLOAT
   264: DOUBLE
   265: VOID
   266: IF
   267: ELSE
   268: GOTO
   269: ASSIGN_OP
   270: NE
   271: EQ
   272: LT
   273: LE
   274: GT
   275: GE
    43: '+'
    45: '-'
    42: '*'
    47: '/'
    40: '('
    41: ')'
    59: ';'
    44: ','
   123: '{'
   125: '}'
    58: ':'


Grammar States: 
State 0:
67: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_decls to state 3
  3:   On declaration_statement to state 4
  4:   On type_declaration to state 5
  5:   On INTEGER to state 6
  6:   On FLOAT to state 7
  7:   On DOUBLE to state 8
  8:   On VOID to state 9
  Reduce by 9: procedure_decls ->  . 


State 1:
67: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_decls procedure_list 
19: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_decls to state 10
  1:   On declaration_statement to state 11
  2:   On type_declaration to state 5
  3:   On INTEGER to state 6
  4:   On FLOAT to state 7
  5:   On DOUBLE to state 8
  6:   On VOID to state 9
  Reduce by 9: procedure_decls ->  . 


State 3:
2: program -> procedure_decls  . procedure_list 
  0:   On procedure_list to state 12
  1:   On procedure_name to state 13
  2:   On NAME to state 14
  Reduce by 6: procedure_list ->  . 


State 4:
18: declaration_statement_list -> declaration_statement  . 
  Reduce by 18: declaration_statement_list -> declaration_statement  . 


State 5:
7: procedure_decls -> type_declaration  . NAME '(' argument_list ')' ';' procedure_decls 
8: procedure_decls -> type_declaration  . NAME '(' ')' ';' procedure_decls 
20: declaration_statement -> type_declaration  . NAME ';' 
  0:   On NAME to state 15


State 6:
21: type_declaration -> INTEGER  . 
  Reduce by 21: type_declaration -> INTEGER  . 


State 7:
22: type_declaration -> FLOAT  . 
  Reduce by 22: type_declaration -> FLOAT  . 


State 8:
23: type_declaration -> DOUBLE  . 
  Reduce by 23: type_declaration -> DOUBLE  . 


State 9:
24: type_declaration -> VOID  . 
  Reduce by 24: type_declaration -> VOID  . 


State 10:
1: program -> declaration_statement_list procedure_decls  . procedure_list 
  0:   On procedure_list to state 16
  1:   On procedure_name to state 13
  2:   On NAME to state 14
  Reduce by 6: procedure_list ->  . 


State 11:
19: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 19: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 12:
2: program -> procedure_decls procedure_list  . 
  Reduce by 2: program -> procedure_decls procedure_list  . 


State 13:
3: procedure_list -> procedure_name  . #0001 procedure_body #0002 procedure_list 
  0:   On #0001 to state 17
  Reduce by 4: #0001 ->  . 


State 14:
10: procedure_name -> NAME  . '(' argument_list ')' 
11: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 18


State 15:
7: procedure_decls -> type_declaration NAME  . '(' argument_list ')' ';' procedure_decls 
8: procedure_decls -> type_declaration NAME  . '(' ')' ';' procedure_decls 
20: declaration_statement -> type_declaration NAME  . ';' 
  0:   On '(' to state 19
  1:   On ';' to state 20


State 16:
1: program -> declaration_statement_list procedure_decls procedure_list  . 
  Reduce by 1: program -> declaration_statement_list procedure_decls procedure_list  . 


State 17:
3: procedure_list -> procedure_name #0001  . procedure_body #0002 procedure_list 
  0:   On procedure_body to state 21
  1:   On '{' to state 22


State 18:
10: procedure_name -> NAME '('  . argument_list ')' 
11: procedure_name -> NAME '('  . ')' 
  0:   On argument_list to state 23
  1:   On ')' to state 24
  2:   On argument to state 25
  3:   On type_declaration to state 26
  4:   On INTEGER to state 6
  5:   On FLOAT to state 7
  6:   On DOUBLE to state 8
  7:   On VOID to state 9


State 19:
7: procedure_decls -> type_declaration NAME '('  . argument_list ')' ';' procedure_decls 
8: procedure_decls -> type_declaration NAME '('  . ')' ';' procedure_decls 
  0:   On argument_list to state 27
  1:   On ')' to state 28
  2:   On argument to state 25
  3:   On type_declaration to state 26
  4:   On INTEGER to state 6
  5:   On FLOAT to state 7
  6:   On DOUBLE to state 8
  7:   On VOID to state 9


State 20:
20: declaration_statement -> type_declaration NAME ';'  . 
  Reduce by 20: declaration_statement -> type_declaration NAME ';'  . 


State 21:
3: procedure_list -> procedure_name #0001 procedure_body  . #0002 procedure_list 
  0:   On #0002 to state 29
  Reduce by 5: #0002 ->  . 


State 22:
15: procedure_body -> '{'  . declaration_statement_list #0003 basic_block_list '}' 
17: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 30
  1:   On basic_block_list to state 31
  2:   On declaration_statement to state 4
  3:   On basic_block to state 32
  4:   On type_declaration to state 33
  5:   On BASIC_BLOCK to state 34
  6:   On INTEGER to state 6
  7:   On FLOAT to state 7
  8:   On DOUBLE to state 8
  9:   On VOID to state 9


State 23:
10: procedure_name -> NAME '(' argument_list  . ')' 
12: argument_list -> argument_list  . ',' argument 
  0:   On ')' to state 35
  1:   On ',' to state 36


State 24:
11: procedure_name -> NAME '(' ')'  . 
  Reduce by 11: procedure_name -> NAME '(' ')'  . 


State 25:
13: argument_list -> argument  . 
  Reduce by 13: argument_list -> argument  . 


State 26:
14: argument -> type_declaration  . NAME 
  0:   On NAME to state 37


State 27:
7: procedure_decls -> type_declaration NAME '(' argument_list  . ')' ';' procedure_decls 
12: argument_list -> argument_list  . ',' argument 
  0:   On ')' to state 38
  1:   On ',' to state 36


State 28:
8: procedure_decls -> type_declaration NAME '(' ')'  . ';' procedure_decls 
  0:   On ';' to state 39


State 29:
3: procedure_list -> procedure_name #0001 procedure_body #0002  . procedure_list 
  0:   On procedure_list to state 40
  1:   On procedure_name to state 13
  2:   On NAME to state 14
  Reduce by 6: procedure_list ->  . 


State 30:
15: procedure_body -> '{' declaration_statement_list  . #0003 basic_block_list '}' 
19: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0003 to state 41
  1:   On declaration_statement to state 11
  2:   On type_declaration to state 33
  3:   On INTEGER to state 6
  4:   On FLOAT to state 7
  5:   On DOUBLE to state 8
  6:   On VOID to state 9
  Reduce by 16: #0003 ->  . 


State 31:
17: procedure_body -> '{' basic_block_list  . '}' 
25: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 42
  1:   On basic_block to state 43
  2:   On BASIC_BLOCK to state 34


State 32:
26: basic_block_list -> basic_block  . 
  Reduce by 26: basic_block_list -> basic_block  . 


State 33:
20: declaration_statement -> type_declaration  . NAME ';' 
  0:   On NAME to state 44


State 34:
27: basic_block -> BASIC_BLOCK  . ':' executable_statement_list 
  0:   On ':' to state 45


State 35:
10: procedure_name -> NAME '(' argument_list ')'  . 
  Reduce by 10: procedure_name -> NAME '(' argument_list ')'  . 


State 36:
12: argument_list -> argument_list ','  . argument 
  0:   On argument to state 46
  1:   On type_declaration to state 26
  2:   On INTEGER to state 6
  3:   On FLOAT to state 7
  4:   On DOUBLE to state 8
  5:   On VOID to state 9


State 37:
14: argument -> type_declaration NAME  . 
  Reduce by 14: argument -> type_declaration NAME  . 


State 38:
7: procedure_decls -> type_declaration NAME '(' argument_list ')'  . ';' procedure_decls 
  0:   On ';' to state 47


State 39:
8: procedure_decls -> type_declaration NAME '(' ')' ';'  . procedure_decls 
  0:   On procedure_decls to state 48
  1:   On type_declaration to state 49
  2:   On INTEGER to state 6
  3:   On FLOAT to state 7
  4:   On DOUBLE to state 8
  5:   On VOID to state 9
  Reduce by 9: procedure_decls ->  . 


State 40:
3: procedure_list -> procedure_name #0001 procedure_body #0002 procedure_list  . 
  Reduce by 3: procedure_list -> procedure_name #0001 procedure_body #0002 procedure_list  . 


State 41:
15: procedure_body -> '{' declaration_statement_list #0003  . basic_block_list '}' 
  0:   On basic_block_list to state 50
  1:   On basic_block to state 32
  2:   On BASIC_BLOCK to state 34


State 42:
17: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 17: procedure_body -> '{' basic_block_list '}'  . 


State 43:
25: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 25: basic_block_list -> basic_block_list basic_block  . 


State 44:
20: declaration_statement -> type_declaration NAME  . ';' 
  0:   On ';' to state 20


State 45:
27: basic_block -> BASIC_BLOCK ':'  . executable_statement_list 
  0:   On executable_statement_list to state 51
  1:   On assignment_statement_list to state 52
  Reduce by 32: assignment_statement_list ->  . 


State 46:
12: argument_list -> argument_list ',' argument  . 
  Reduce by 12: argument_list -> argument_list ',' argument  . 


State 47:
7: procedure_decls -> type_declaration NAME '(' argument_list ')' ';'  . procedure_decls 
  0:   On procedure_decls to state 53
  1:   On type_declaration to state 49
  2:   On INTEGER to state 6
  3:   On FLOAT to state 7
  4:   On DOUBLE to state 8
  5:   On VOID to state 9
  Reduce by 9: procedure_decls ->  . 


State 48:
8: procedure_decls -> type_declaration NAME '(' ')' ';' procedure_decls  . 
  Reduce by 8: procedure_decls -> type_declaration NAME '(' ')' ';' procedure_decls  . 


State 49:
7: procedure_decls -> type_declaration  . NAME '(' argument_list ')' ';' procedure_decls 
8: procedure_decls -> type_declaration  . NAME '(' ')' ';' procedure_decls 
  0:   On NAME to state 54


State 50:
15: procedure_body -> '{' declaration_statement_list #0003 basic_block_list  . '}' 
25: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 55
  1:   On basic_block to state 43
  2:   On BASIC_BLOCK to state 34


State 51:
27: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 
  Reduce by 27: basic_block -> BASIC_BLOCK ':' executable_statement_list  . 


State 52:
28: executable_statement_list -> assignment_statement_list  . 
29: executable_statement_list -> assignment_statement_list  . RETURN return_value ';' 
33: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 56
  1:   On assignment_statement to state 57
  2:   On variable to state 58
  3:   On if_block to state 59
  4:   On goto_statement to state 60
  5:   On func_call to state 61
  6:   On NAME to state 62
  7:   On IF to state 63
  8:   On GOTO to state 64
  Reduce by 28: executable_statement_list -> assignment_statement_list  . 


State 53:
7: procedure_decls -> type_declaration NAME '(' argument_list ')' ';' procedure_decls  . 
  Reduce by 7: procedure_decls -> type_declaration NAME '(' argument_list ')' ';' procedure_decls  . 


State 54:
7: procedure_decls -> type_declaration NAME  . '(' argument_list ')' ';' procedure_decls 
8: procedure_decls -> type_declaration NAME  . '(' ')' ';' procedure_decls 
  0:   On '(' to state 19


State 55:
15: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 
  Reduce by 15: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 


State 56:
29: executable_statement_list -> assignment_statement_list RETURN  . return_value ';' 
  0:   On return_value to state 65
  1:   On comparision_expression to state 66
  2:   On arith_expression to state 67
  3:   On '-' to state 68
  4:   On '(' to state 69
  5:   On atomic_expr to state 70
  6:   On variable to state 71
  7:   On constant to state 72
  8:   On func_call to state 73
  9:   On NAME to state 62
  10:   On INTEGER_NUMBER to state 74
  11:   On FLOAT_NUMBER to state 75
  Reduce by 31: return_value ->  . 


State 57:
33: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 33: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 58:
34: assignment_statement -> variable  . ASSIGN_OP comparision_expression ';' 
  0:   On ASSIGN_OP to state 76


State 59:
35: assignment_statement -> if_block  . 
  Reduce by 35: assignment_statement -> if_block  . 


State 60:
36: assignment_statement -> goto_statement  . 
  Reduce by 36: assignment_statement -> goto_statement  . 


State 61:
37: assignment_statement -> func_call  . ';' 
  0:   On ';' to state 77


State 62:
64: variable -> NAME  . 
60: func_call -> NAME  . '(' pass_variable_list ')' 
61: func_call -> NAME  . '(' ')' 
  0:   On '(' to state 78
  Reduce by 64: variable -> NAME  . 


State 63:
38: if_block -> IF  . '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';' 
  0:   On '(' to state 79


State 64:
39: goto_statement -> GOTO  . BASIC_BLOCK ';' 
  0:   On BASIC_BLOCK to state 80


State 65:
29: executable_statement_list -> assignment_statement_list RETURN return_value  . ';' 
  0:   On ';' to state 81


State 66:
30: return_value -> comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On GT to state 82
  1:   On LT to state 83
  2:   On GE to state 84
  3:   On LE to state 85
  4:   On EQ to state 86
  5:   On NE to state 87
  Reduce by 30: return_value -> comparision_expression  . 


State 67:
40: comparision_expression -> arith_expression  . 
53: arith_expression -> arith_expression  . '*' arith_expression 
54: arith_expression -> arith_expression  . '/' arith_expression 
55: arith_expression -> arith_expression  . '+' arith_expression 
56: arith_expression -> arith_expression  . '-' arith_expression 
  0:   On '*' to state 88
  1:   On '/' to state 89
  2:   On '+' to state 90
  3:   On '-' to state 91
  Reduce by 40: comparision_expression -> arith_expression  . 


State 68:
47: arith_expression -> '-'  . atomic_expr 
48: arith_expression -> '-'  . '(' comparision_expression ')' 
  0:   On atomic_expr to state 92
  1:   On '(' to state 93
  2:   On variable to state 71
  3:   On constant to state 72
  4:   On func_call to state 73
  5:   On NAME to state 62
  6:   On INTEGER_NUMBER to state 74
  7:   On FLOAT_NUMBER to state 75


State 69:
49: arith_expression -> '('  . type_declaration ')' atomic_expr 
50: arith_expression -> '('  . type_declaration ')' '(' comparision_expression ')' 
51: arith_expression -> '('  . comparision_expression ')' 
  0:   On type_declaration to state 94
  1:   On comparision_expression to state 95
  2:   On INTEGER to state 6
  3:   On FLOAT to state 7
  4:   On DOUBLE to state 8
  5:   On VOID to state 9
  6:   On arith_expression to state 67
  7:   On '-' to state 68
  8:   On '(' to state 69
  9:   On atomic_expr to state 70
  10:   On variable to state 71
  11:   On constant to state 72
  12:   On func_call to state 73
  13:   On NAME to state 62
  14:   On INTEGER_NUMBER to state 74
  15:   On FLOAT_NUMBER to state 75


State 70:
52: arith_expression -> atomic_expr  . 
  Reduce by 52: arith_expression -> atomic_expr  . 


State 71:
57: atomic_expr -> variable  . 
  Reduce by 57: atomic_expr -> variable  . 


State 72:
58: atomic_expr -> constant  . 
  Reduce by 58: atomic_expr -> constant  . 


State 73:
59: atomic_expr -> func_call  . 
  Reduce by 59: atomic_expr -> func_call  . 


State 74:
65: constant -> INTEGER_NUMBER  . 
  Reduce by 65: constant -> INTEGER_NUMBER  . 


State 75:
66: constant -> FLOAT_NUMBER  . 
  Reduce by 66: constant -> FLOAT_NUMBER  . 


State 76:
34: assignment_statement -> variable ASSIGN_OP  . comparision_expression ';' 
  0:   On comparision_expression to state 96
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 77:
37: assignment_statement -> func_call ';'  . 
  Reduce by 37: assignment_statement -> func_call ';'  . 


State 78:
60: func_call -> NAME '('  . pass_variable_list ')' 
61: func_call -> NAME '('  . ')' 
  0:   On pass_variable_list to state 97
  1:   On ')' to state 98
  2:   On comparision_expression to state 99
  3:   On arith_expression to state 67
  4:   On '-' to state 68
  5:   On '(' to state 69
  6:   On atomic_expr to state 70
  7:   On variable to state 71
  8:   On constant to state 72
  9:   On func_call to state 73
  10:   On NAME to state 62
  11:   On INTEGER_NUMBER to state 74
  12:   On FLOAT_NUMBER to state 75


State 79:
38: if_block -> IF '('  . comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';' 
  0:   On comparision_expression to state 100
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 80:
39: goto_statement -> GOTO BASIC_BLOCK  . ';' 
  0:   On ';' to state 101


State 81:
29: executable_statement_list -> assignment_statement_list RETURN return_value ';'  . 
  Reduce by 29: executable_statement_list -> assignment_statement_list RETURN return_value ';'  . 


State 82:
41: comparision_expression -> comparision_expression GT  . comparision_expression 
  0:   On comparision_expression to state 102
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 83:
42: comparision_expression -> comparision_expression LT  . comparision_expression 
  0:   On comparision_expression to state 103
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 84:
43: comparision_expression -> comparision_expression GE  . comparision_expression 
  0:   On comparision_expression to state 104
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 85:
44: comparision_expression -> comparision_expression LE  . comparision_expression 
  0:   On comparision_expression to state 105
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 86:
45: comparision_expression -> comparision_expression EQ  . comparision_expression 
  0:   On comparision_expression to state 106
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 87:
46: comparision_expression -> comparision_expression NE  . comparision_expression 
  0:   On comparision_expression to state 107
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 88:
53: arith_expression -> arith_expression '*'  . arith_expression 
  0:   On arith_expression to state 108
  1:   On '-' to state 68
  2:   On '(' to state 69
  3:   On atomic_expr to state 70
  4:   On variable to state 71
  5:   On constant to state 72
  6:   On func_call to state 73
  7:   On NAME to state 62
  8:   On INTEGER_NUMBER to state 74
  9:   On FLOAT_NUMBER to state 75


State 89:
54: arith_expression -> arith_expression '/'  . arith_expression 
  0:   On arith_expression to state 109
  1:   On '-' to state 68
  2:   On '(' to state 69
  3:   On atomic_expr to state 70
  4:   On variable to state 71
  5:   On constant to state 72
  6:   On func_call to state 73
  7:   On NAME to state 62
  8:   On INTEGER_NUMBER to state 74
  9:   On FLOAT_NUMBER to state 75


State 90:
55: arith_expression -> arith_expression '+'  . arith_expression 
  0:   On arith_expression to state 110
  1:   On '-' to state 68
  2:   On '(' to state 69
  3:   On atomic_expr to state 70
  4:   On variable to state 71
  5:   On constant to state 72
  6:   On func_call to state 73
  7:   On NAME to state 62
  8:   On INTEGER_NUMBER to state 74
  9:   On FLOAT_NUMBER to state 75


State 91:
56: arith_expression -> arith_expression '-'  . arith_expression 
  0:   On arith_expression to state 111
  1:   On '-' to state 68
  2:   On '(' to state 69
  3:   On atomic_expr to state 70
  4:   On variable to state 71
  5:   On constant to state 72
  6:   On func_call to state 73
  7:   On NAME to state 62
  8:   On INTEGER_NUMBER to state 74
  9:   On FLOAT_NUMBER to state 75


State 92:
47: arith_expression -> '-' atomic_expr  . 
  Reduce by 47: arith_expression -> '-' atomic_expr  . 


State 93:
48: arith_expression -> '-' '('  . comparision_expression ')' 
  0:   On comparision_expression to state 112
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 94:
49: arith_expression -> '(' type_declaration  . ')' atomic_expr 
50: arith_expression -> '(' type_declaration  . ')' '(' comparision_expression ')' 
  0:   On ')' to state 113


State 95:
51: arith_expression -> '(' comparision_expression  . ')' 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ')' to state 114
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87


State 96:
34: assignment_statement -> variable ASSIGN_OP comparision_expression  . ';' 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ';' to state 115
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87


State 97:
60: func_call -> NAME '(' pass_variable_list  . ')' 
  0:   On ')' to state 116


State 98:
61: func_call -> NAME '(' ')'  . 
  Reduce by 61: func_call -> NAME '(' ')'  . 


State 99:
62: pass_variable_list -> comparision_expression  . ',' pass_variable_list 
63: pass_variable_list -> comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ',' to state 117
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87
  Reduce by 63: pass_variable_list -> comparision_expression  . 


State 100:
38: if_block -> IF '(' comparision_expression  . ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';' 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ')' to state 118
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87


State 101:
39: goto_statement -> GOTO BASIC_BLOCK ';'  . 
  Reduce by 39: goto_statement -> GOTO BASIC_BLOCK ';'  . 


State 102:
41: comparision_expression -> comparision_expression GT comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0 (removed by precedence):   On GT to state 82
  1 (removed by precedence):   On LT to state 83
  2 (removed by precedence):   On GE to state 84
  3 (removed by precedence):   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 41: comparision_expression -> comparision_expression GT comparision_expression  . 


State 103:
42: comparision_expression -> comparision_expression LT comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0 (removed by precedence):   On GT to state 82
  1 (removed by precedence):   On LT to state 83
  2 (removed by precedence):   On GE to state 84
  3 (removed by precedence):   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 42: comparision_expression -> comparision_expression LT comparision_expression  . 


State 104:
43: comparision_expression -> comparision_expression GE comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0 (removed by precedence):   On GT to state 82
  1 (removed by precedence):   On LT to state 83
  2 (removed by precedence):   On GE to state 84
  3 (removed by precedence):   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 43: comparision_expression -> comparision_expression GE comparision_expression  . 


State 105:
44: comparision_expression -> comparision_expression LE comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0 (removed by precedence):   On GT to state 82
  1 (removed by precedence):   On LT to state 83
  2 (removed by precedence):   On GE to state 84
  3 (removed by precedence):   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 44: comparision_expression -> comparision_expression LE comparision_expression  . 


State 106:
45: comparision_expression -> comparision_expression EQ comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On GT to state 82
  1:   On LT to state 83
  2:   On GE to state 84
  3:   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 45: comparision_expression -> comparision_expression EQ comparision_expression  . 


State 107:
46: comparision_expression -> comparision_expression NE comparision_expression  . 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On GT to state 82
  1:   On LT to state 83
  2:   On GE to state 84
  3:   On LE to state 85
  4 (removed by precedence):   On EQ to state 86
  5 (removed by precedence):   On NE to state 87
  Reduce by 46: comparision_expression -> comparision_expression NE comparision_expression  . 


State 108:
53: arith_expression -> arith_expression '*' arith_expression  . 
53: arith_expression -> arith_expression  . '*' arith_expression 
54: arith_expression -> arith_expression  . '/' arith_expression 
55: arith_expression -> arith_expression  . '+' arith_expression 
56: arith_expression -> arith_expression  . '-' arith_expression 
  0 (removed by precedence):   On '*' to state 88
  1 (removed by precedence):   On '/' to state 89
  2 (removed by precedence):   On '+' to state 90
  3 (removed by precedence):   On '-' to state 91
  Reduce by 53: arith_expression -> arith_expression '*' arith_expression  . 


State 109:
54: arith_expression -> arith_expression '/' arith_expression  . 
53: arith_expression -> arith_expression  . '*' arith_expression 
54: arith_expression -> arith_expression  . '/' arith_expression 
55: arith_expression -> arith_expression  . '+' arith_expression 
56: arith_expression -> arith_expression  . '-' arith_expression 
  0 (removed by precedence):   On '*' to state 88
  1 (removed by precedence):   On '/' to state 89
  2 (removed by precedence):   On '+' to state 90
  3 (removed by precedence):   On '-' to state 91
  Reduce by 54: arith_expression -> arith_expression '/' arith_expression  . 


State 110:
55: arith_expression -> arith_expression '+' arith_expression  . 
53: arith_expression -> arith_expression  . '*' arith_expression 
54: arith_expression -> arith_expression  . '/' arith_expression 
55: arith_expression -> arith_expression  . '+' arith_expression 
56: arith_expression -> arith_expression  . '-' arith_expression 
  0:   On '*' to state 88
  1:   On '/' to state 89
  2 (removed by precedence):   On '+' to state 90
  3 (removed by precedence):   On '-' to state 91
  Reduce by 55: arith_expression -> arith_expression '+' arith_expression  . 


State 111:
56: arith_expression -> arith_expression '-' arith_expression  . 
53: arith_expression -> arith_expression  . '*' arith_expression 
54: arith_expression -> arith_expression  . '/' arith_expression 
55: arith_expression -> arith_expression  . '+' arith_expression 
56: arith_expression -> arith_expression  . '-' arith_expression 
  0:   On '*' to state 88
  1:   On '/' to state 89
  2 (removed by precedence):   On '+' to state 90
  3 (removed by precedence):   On '-' to state 91
  Reduce by 56: arith_expression -> arith_expression '-' arith_expression  . 


State 112:
48: arith_expression -> '-' '(' comparision_expression  . ')' 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ')' to state 119
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87


State 113:
49: arith_expression -> '(' type_declaration ')'  . atomic_expr 
50: arith_expression -> '(' type_declaration ')'  . '(' comparision_expression ')' 
  0:   On atomic_expr to state 120
  1:   On '(' to state 121
  2:   On variable to state 71
  3:   On constant to state 72
  4:   On func_call to state 73
  5:   On NAME to state 62
  6:   On INTEGER_NUMBER to state 74
  7:   On FLOAT_NUMBER to state 75


State 114:
51: arith_expression -> '(' comparision_expression ')'  . 
  Reduce by 51: arith_expression -> '(' comparision_expression ')'  . 


State 115:
34: assignment_statement -> variable ASSIGN_OP comparision_expression ';'  . 
  Reduce by 34: assignment_statement -> variable ASSIGN_OP comparision_expression ';'  . 


State 116:
60: func_call -> NAME '(' pass_variable_list ')'  . 
  Reduce by 60: func_call -> NAME '(' pass_variable_list ')'  . 


State 117:
62: pass_variable_list -> comparision_expression ','  . pass_variable_list 
  0:   On pass_variable_list to state 122
  1:   On comparision_expression to state 99
  2:   On arith_expression to state 67
  3:   On '-' to state 68
  4:   On '(' to state 69
  5:   On atomic_expr to state 70
  6:   On variable to state 71
  7:   On constant to state 72
  8:   On func_call to state 73
  9:   On NAME to state 62
  10:   On INTEGER_NUMBER to state 74
  11:   On FLOAT_NUMBER to state 75


State 118:
38: if_block -> IF '(' comparision_expression ')'  . GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';' 
  0:   On GOTO to state 123


State 119:
48: arith_expression -> '-' '(' comparision_expression ')'  . 
  Reduce by 48: arith_expression -> '-' '(' comparision_expression ')'  . 


State 120:
49: arith_expression -> '(' type_declaration ')' atomic_expr  . 
  Reduce by 49: arith_expression -> '(' type_declaration ')' atomic_expr  . 


State 121:
50: arith_expression -> '(' type_declaration ')' '('  . comparision_expression ')' 
  0:   On comparision_expression to state 124
  1:   On arith_expression to state 67
  2:   On '-' to state 68
  3:   On '(' to state 69
  4:   On atomic_expr to state 70
  5:   On variable to state 71
  6:   On constant to state 72
  7:   On func_call to state 73
  8:   On NAME to state 62
  9:   On INTEGER_NUMBER to state 74
  10:   On FLOAT_NUMBER to state 75


State 122:
62: pass_variable_list -> comparision_expression ',' pass_variable_list  . 
  Reduce by 62: pass_variable_list -> comparision_expression ',' pass_variable_list  . 


State 123:
38: if_block -> IF '(' comparision_expression ')' GOTO  . BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';' 
  0:   On BASIC_BLOCK to state 125


State 124:
50: arith_expression -> '(' type_declaration ')' '(' comparision_expression  . ')' 
41: comparision_expression -> comparision_expression  . GT comparision_expression 
42: comparision_expression -> comparision_expression  . LT comparision_expression 
43: comparision_expression -> comparision_expression  . GE comparision_expression 
44: comparision_expression -> comparision_expression  . LE comparision_expression 
45: comparision_expression -> comparision_expression  . EQ comparision_expression 
46: comparision_expression -> comparision_expression  . NE comparision_expression 
  0:   On ')' to state 126
  1:   On GT to state 82
  2:   On LT to state 83
  3:   On GE to state 84
  4:   On LE to state 85
  5:   On EQ to state 86
  6:   On NE to state 87


State 125:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK  . ';' ELSE GOTO BASIC_BLOCK ';' 
  0:   On ';' to state 127


State 126:
50: arith_expression -> '(' type_declaration ')' '(' comparision_expression ')'  . 
  Reduce by 50: arith_expression -> '(' type_declaration ')' '(' comparision_expression ')'  . 


State 127:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';'  . ELSE GOTO BASIC_BLOCK ';' 
  0:   On ELSE to state 128


State 128:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE  . GOTO BASIC_BLOCK ';' 
  0:   On GOTO to state 129


State 129:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO  . BASIC_BLOCK ';' 
  0:   On BASIC_BLOCK to state 130


State 130:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK  . ';' 
  0:   On ';' to state 131


State 131:
38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';'  . 
  Reduce by 38: if_block -> IF '(' comparision_expression ')' GOTO BASIC_BLOCK ';' ELSE GOTO BASIC_BLOCK ';'  . 



